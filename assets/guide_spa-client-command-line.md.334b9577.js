import{_ as a,c as e,o as s,a as n}from"./app.764b808c.js";const k='{"title":"Command Line","description":"","frontmatter":{},"headers":[{"level":2,"title":"Overview","slug":"overview"},{"level":2,"title":"Usage Example","slug":"usage-example"},{"level":2,"title":"Docker Image","slug":"docker-image"},{"level":2,"title":"Binary package","slug":"binary-package"},{"level":2,"title":"Source Code","slug":"source-code"}],"relativePath":"guide/spa-client-command-line.md"}',t={},l=n(`<h1 id="command-line" tabindex="-1">Command Line <a class="header-anchor" href="#command-line" aria-hidden="true">#</a></h1><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-hidden="true">#</a></h2><p>spa-client it a command line tool to help user upload files and release new SPA.</p><h2 id="usage-example" tabindex="-1">Usage Example <a class="header-anchor" href="#usage-example" aria-hidden="true">#</a></h2><p>There are some usage examples of <code>spa-client</code>, you also can get help by typing <code>spa-client -h</code>.</p><div class="language-shell"><pre><code><span class="token comment"># upload static files to admin server, if not set $OPT_VERSION, will try to </span>
spa-client -c <span class="token variable">$CONFIG_PATH</span> upload <span class="token variable">$STATIC_FILE_PATH</span> <span class="token variable">$DOMAIN</span> <span class="token variable">$OPT_VERSION</span> -p <span class="token number">3</span>

<span class="token comment"># tell admin server to release the specific domain version to public. if don&#39;t set $OPT_VERSION, will fetch the max version to be online, if the max version it under uploading process, release will fail. </span>
spa-client -c <span class="token variable">$CONFIG_PATH</span> release <span class="token variable">$DOMAIN</span> <span class="token variable">$OPT_VERSION</span>

<span class="token comment"># get info of the specific domain or all domain, just like the admin server http api.</span>
spa-client -c <span class="token variable">$CONFIG_PATH</span> info <span class="token variable">$OPT_DOMAIN</span>

<span class="token comment"># reload spa-server, this is used to reload https cert</span>
spa-client -c <span class="token variable">$CONFIG_PATH</span> reload
</code></pre></div><p>There also provides http api to interact with admin server,</p><div class="language-shell"><pre><code><span class="token comment"># Uploading Files By scp and release </span>
<span class="token function">scp</span> <span class="token variable">$SPA_DIRECTORY</span> <span class="token punctuation">\\</span>
user@ip:<span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> <span class="token string">&quot;http://<span class="token variable">$ADMIN_SERVER</span>/upload/position?domain=<span class="token variable">$DOMAIN</span>&quot;</span> -H <span class="token string">&quot;Authorization: Bearer <span class="token variable">$TOKEN</span>&quot;</span><span class="token variable">)</span></span> <span class="token operator">&amp;&amp;</span><span class="token punctuation">\\</span>
<span class="token function">curl</span> <span class="token string">&quot;http://<span class="token variable">$ADMIN_SERVER</span>/update_version?domain=<span class="token variable">$DOMAIN</span>&quot;</span> -H <span class="token string">&quot;Authorization: Bearer <span class="token variable">$TOKEN</span>&quot;</span>
</code></pre></div><h2 id="docker-image" tabindex="-1">Docker Image <a class="header-anchor" href="#docker-image" aria-hidden="true">#</a></h2><p>We also release a docker image for spa-client.</p><div class="language-shell"><pre><code>$ <span class="token function">docker</span> run --rm -it -v <span class="token variable">$CONFIG_FILE_PATH</span>:/client.conf <span class="token punctuation">\\</span>
 timzaak/client spa-client -c /client.conf info
</code></pre></div><h2 id="binary-package" tabindex="-1">Binary package <a class="header-anchor" href="#binary-package" aria-hidden="true">#</a></h2><p>You can get the packed binary in <a href="https://github.com/timzaak/spa-server/releases" target="_blank" rel="noopener noreferrer">Release Notes</a>.</p><p>It now supports three format:</p><ul><li>x86_64 Linux-Musl</li><li>x86_64 Mac</li><li>x86_64 Windows exe</li></ul><h2 id="source-code" tabindex="-1">Source Code <a class="header-anchor" href="#source-code" aria-hidden="true">#</a></h2><div class="language-shell"><pre><code><span class="token function">git</span> clone --recursive https://github.com/timzaak/spa-server
cargo build --package spa-client --release
<span class="token comment"># you could get the binary from ./target/release directory</span>
</code></pre></div><p>You can install it by:</p><div class="language-shell"><pre><code><span class="token builtin class-name">cd</span> client
cargo <span class="token function">install</span> --bin spa-client  --path <span class="token builtin class-name">.</span>
</code></pre></div>`,19),o=[l];function i(p,c,r,d,u,h){return s(),e("div",null,o)}var v=a(t,[["render",i]]);export{k as __pageData,v as default};
